Select * from pessoas; 

Select * from pessoas where altura > 1.70; 

Select * from pessoas where altura between 1.60 and 1.80; 

Select * from pessoas where nome_pessoa like ‘C%’; 

Select count(*) from pessoas; 

Select avg(altura) from pessoas; 

Select nome,altura from pessoas where altura = max(altura); 

Select nome,altura from pessoas where altura = min(altura); 

Select * from pessoas where length(nome) = 10; 

Select * from pessoas order by altura desc; 

 

Update pessoas set nome = ‘Carlos E.’ where id = 3; 

Update pessoas set altura = 1.79 where altura > 1.80; 

Update pais set nome_pais = ‘Canadá (América do Norte).’ where id = 2; 

Update pessoas set nome = concat(nome, ‘ dos Santos’) where ‘Ana Clara’ and ‘Daniela Moura’; 

Update pets set pedigree = ‘Sem pedigree’ where pedigree is null; 

Update pets set nome = Upper(nome) where nome = ‘B%’; 

Update passaporte set cod_passaporte = ‘BR000001’ where id = 1; 

 

Create or replace procedure aumentarAltura( 

V_altura IN pessoa.altura%TYPE) as beggin  

V_altura := V_altura + pessoas.altura 

Update pessoas set altura = V_altura; 

Commit; 

End/;    

Update passaporte set pais_id = 5 where pessoa_id = 4; 

Update pets set pedigree = ‘Beagle Premium’ and nome = ‘Biduzinho’ where id = 7l; 

  

 

- delete pets where Upper(nome_pet) = ‘BOB’; 

- delete pessoas where altura < 1.65; 

- delete  paises where nome_pais like Upper(nome_pais) = ‘CA%’ 

- delete pets where pessoa_id = 1; 

- delete (select * from pessoas where altura > 1.80); 

- delete pessoas where Upper(nome) = ‘Eduarda Lima’; 

- delete pets where nome like nome ‘%a’ 

- delete pets where pessoa_id is null; 

   -- CULPA DE ANDRESSA

SELECT * FROM PASSAPORTE P INNER JOIN PAISES PA ON P.pais_id = PA.ID_PAIS

SELECT * FROM PESSOAS P RIGTH JOIN PETS PT ON P.ID_PESSOA = PA.pessoa_id


SELECT * FROM PESSOAS P INNER JOIN PETS PT ON P.ID_PESSOA = PA.pessoa_id

SELECT * FROM PESSOAS P WHERE PESSOAS_ID IS NULL LEFT JOIN PETS PT ON P.ID_PESSOA = PA.pessoa_id

SELECT PE.NOME_PET, PA.NOME_PAIS FROM PESSOAS P INNER JOIN  PETS PE ON PE.PESSOAS_ID = P.ID_PESSOA
INNER JOIN PASSAPORTES PS ON P.PESSOA_ID = PS.PESSOA_ID INNER JOIN PAISES ON P.ID_PAISES = PS.PAIS_ID

SELECT * FROM PASSAPORTE PS LEFT JOIN PAISES PA ON PS.PAIS_ID = PA.ID_PAIS
 
SELECT P.NOME_PESSOA,COUNT(PT.ID_PETS) AS 'QUANTIDADE DE PETS' FROM PESSOAS P GROUP BY P.NOME_PESSOA PT. INNER JOIN PETS PT ON P.ID_PESSOA = PT.ID_PESSOA

SELECT * FROM PESSOAS    
INNER JOIN PASSAPORTE PA ON P.ID_PESSOAS = PA.PESSOAS_ID
LEFT JOIN PETS PT ON P.ID_PESSOAS = PT.PESSOAS_ID

 
SELECT P.NOME_PESSOA AS "DONO", PT.NOME_PET AS "NOME DO PET"
FROM pessoas P
INNER JOIN pets PT ON P.ID_PESSOA = PT.PESSOA_ID
INNER JOIN passaportes PA ON P.ID_PESSOA = PA.PESSOA_ID;
 


 

 
